# -*- coding: utf-8 -*-
"""
Created on Sun Apr 22 08:42:57 2018

@author: Liu Haotian
Id: 2017202020005

Homework2:Iteration
"""

from pylab import *
import random
import numpy as np

# Input parameters matrix A

class value_A:
    def __init__(self,_A11=0,_A12=0,_A13=0,_A21=0,_A22=0,_A23=0,_A31=0,_A32=0,_A33=0):
        self.A11=_A11
        self.A12=_A12
        self.A13=_A13
        self.A21=_A21
        self.A22=_A22
        self.A23=_A23
        self.A31=_A31
        self.A32=_A32
        self.A33=_A33

# Input b

class value_b:
    def __init__(self,_b1=0,_b2=0,_b3=0):
        self.b1=_b1
        self.b2=_b2
        self.b3=_b3

class cal:
    def __init__(self,_A=value_A(0,0,0,0,0,0,0,0,0),_b=value_b(0,0,0),_t=500):
        self.t=_t
        self.A=[]
        self.b=[]
        self.A.append(_A)
        self.b.append(_b)
        self.Vf=[]
        self.x=[]
        AA=np.array([0,0,0],dtype=int)
        self.x.append(AA)

    def calculate(self):
        BB=np.array([[1-(self.A[-1].A11),-self.A[-1].A12,-self.A[-1].A13],[-self.A[-1].A21,1-(self.A[-1].A22),-self.A[-1].A23],[-self.A[-1].A31,-self.A[-1].A32,1-(self.A[-1].A33)]])
        bb=np.array([self.b[-1].b1,self.b[-1].b2,self.b[-1].b3])
        i=0 # random to give a random number, % is to find the remainder, int to get the integer.
        while i < self.t:
            self.x.append(np.dot(BB,self.x[-1])+bb)
            i=i+1
        print(self.x[-1])
        jud=np.dot(self.x[-1],[self.A[-1].A11,-self.A[-1].A12,-self.A[-1].A13])-self.b[-1].b1
        print(jud)
        if abs(jud) < 10:
            print("true")
        else:
            print("Eigen value of B maybe bigger than 1 or it has no answer") #judge whether it can be solved or not.
        

a=cal(value_A(1,2,3,4,5,6,7,8,9),value_b(1,2,3),_t=1000)
a.calculate()
b=cal(value_A(0.5,0,0,0,0.5,0,0,0,0.5),value_b(0.5,1,1.5),_t=1000)
b.calculate()
d=cal(value_A(1,1,1,2,1,3,3,2,1),value_b(1,3,4),_t=50)
d.calculate()

"""
The output is below:
[  -32243984  1455007628 -1352708056]
1115864927
Eigen value of B maybe bigger than 1 or it has no answer
[ 1.  2.  3.]
0.0
true
[1572314861 -791226063  593460012]
1770080911
Eigen value of B maybe bigger than 1 or it has no answer

We can see that this method can only solve some particular situation, if the matrix's eigen is bigger than 1, it will output a very big answer.
"""
